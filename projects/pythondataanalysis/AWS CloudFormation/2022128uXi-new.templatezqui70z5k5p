Parameters:
  LatestAmiId:
    Type: 'AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>'
    Default: /aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2
    AllowedValues:
      - /aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2
    Description: Image ID for the EC2 helper instance. DO NOT change this.
Resources:
  RSSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Security Group for Redshift
      VpcId: !Ref PubPrivateVPC
      Tags:
        - Key: Name
          Value: etl-users-rs-SecGroup
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 407396df-7440-46eb-b4d0-6c4e4a3dbab2
  RSIngress1:
    Type: 'AWS::EC2::SecurityGroupIngress'
    DependsOn: RSSecurityGroup
    Properties:
      CidrIp: 000.00.000.000/32
      GroupId: !Ref RSSecurityGroup
      IpProtocol: tcp
      FromPort: 5439
      ToPort: 5439
  PubPrivateVPC:
    Type: 'AWS::EC2::VPC'
    Properties:
      CidrBlock: 172.31.0.0/16
      Tags:
        - Key: Name
          Value: awsetlintegration
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 557ac44f-b15b-4403-8ffe-6159a9a1c6b9
  PublicSubnet1:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref PubPrivateVPC
      CidrBlock: 172.31.1.0/24
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: etlintegrationPublicSubnet
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 0f57a34b-2f30-47b5-864d-f32683c9f350
  PrivateSubnet1:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref PubPrivateVPC
      CidrBlock: 172.31.3.0/24
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: 'etlintegrationPrivateSubnet'
  PrivateRouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref PubPrivateVPC
      Tags:
        - Key: Network
          Value: Private
 
  InternetGateway:
    Type: 'AWS::EC2::InternetGateway'
    Properties:
      Tags:
        - Key: Name
          Value: !Join 
            - _
            - - !Ref 'AWS::StackName'
        - Key: Network
          Value: Public
    Metadata:
      'AWS::CloudFormation::Designer':
        id: d4067bdc-e76b-47c1-993b-0aeea54dda16
  GatewayToInternet:
    Type: 'AWS::EC2::VPCGatewayAttachment'
    Properties:
      VpcId: !Ref PubPrivateVPC
      InternetGatewayId: !Ref InternetGateway
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 28da7628-b8d1-4057-b8c3-b386c17dee07
  PublicRouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref PubPrivateVPC
      Tags:
        - Key: Network
          Value: Public
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 22415c4d-6070-4f2a-ba67-a62cb76059da
  PublicRoute:
    Type: 'AWS::EC2::Route'
    DependsOn: GatewayToInternet
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
    Metadata:
      'AWS::CloudFormation::Designer':
        id: cce6547b-2d99-40a4-9820-93e68dd260d5
  PublicSubnet1RouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref PublicSubnet1
      RouteTableId: !Ref PublicRouteTable
  PrivateSubnet1RouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref PrivateSubnet1
      RouteTableId: !Ref PrivateRouteTable
  etlRedshiftSpectrumRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: redshift.amazonaws.com
            Action: 'sts:AssumeRole'
      Path: /
      Policies:
        - PolicyName: spectrum-required-access
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - 's3:Get*'
                  - 's3:List*'
                  - 'glue:CreateDatabase'
                  - 'glue:DeleteTable'
                  - 'glue:CreateTable'
                  - 'glue:GetTable'
                Resource:
                  - !Sub 'arn:aws:glue:${AWS::Region}:${AWS::AccountId}:catalog'
                  - !Sub >-
                    arn:aws:glue:${AWS::Region}:${AWS::AccountId}:database/adventureworks
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 4e7acb41-85b0-44a0-96e2-70886086f5d1
  etlRedshiftCluster:
    Type: 'AWS::Redshift::Cluster'
    Properties:
      ClusterType: single-node
      NodeType: dc2.large
      DBName: adventureworks
      MasterUsername: etladmin
      MasterUserPassword: Etl_admin100!
      VpcSecurityGroupIds:
        - !Ref RSSecurityGroup
      ClusterSubnetGroupName: !Ref etlRedshiftClusterSubnetGroup
      PubliclyAccessible: 'true'
      Port: 5439
      IamRoles:
        - 'Fn::GetAtt':
            - etlRedshiftSpectrumRole
            - Arn
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 8aa587c3-93a6-463b-b5e4-0571d3c9db41
  etlRedshiftClusterSubnetGroup:
    Type: 'AWS::Redshift::ClusterSubnetGroup'
    Properties:
      Description: Cluster subnet group
      SubnetIds:
        - !Ref PublicSubnet1
    Metadata:
      'AWS::CloudFormation::Designer':
        id: c535dc93-94d1-43c5-bd1a-b615f159577e
Outputs:
  RSHostName:
    Description: Redshift host name
    Value: !Sub '${etlRedshiftCluster.Endpoint.Address}'
  RSRole:
    Description: ARN of IAM role attached to RS cluster
    Value: !GetAtt etlRedshiftSpectrumRole.Arn
  RSdatabase:
    Description: Redshift database
    Value: adventureworks
  RSadminame:
    Description: Redshift admin name
    Value: etladmin
  RSadminpassword:
    Description: Redshift admin password
    Value: Etl_admin100!
